@page "/"

<h2>Configuration Controller</h2>

@using BedrockServerConfigurator.Library
@inject Configurator config

<div class="text-center">
    <button @onclick="LoadServers"
            class="btn btn-success"
            disabled="@(!config.AllServerDirectories().Any())">
        Load all servers
    </button>

    <button @onclick="Kill"
            class="btn btn-danger">
        Kill all servers
    </button>

    <button @onclick="New"
            class="btn btn-outline-secondary"
            disabled="@(!config.TemplateServerExists || creatingNewServer)">
        New server
    </button>

    <button @onclick="Download"
            class="btn @(config.TemplateServerExists || newDownloadStarted ? "btn-outline-secondary" : "btn-success")"
            disabled="@(config.TemplateServerExists || newDownloadStarted)">
        Download template server
    </button>
</div>

<div class="row">
    <h3 class="col-md-12">Available servers</h3>
    @foreach (var server in config.AllServerDirectories())
    {
        <div class="col-md-2">
            @server
        </div>
    }
</div>

<div class="row">
    <h3 class="col-md-12">Loaded servers</h3>
    @foreach (var server in config.AllServers)
    {
        <div class="col-md-4 card">
            <ServerController MinecraftServer="server.Value"/>
        </div>
    }
</div>

@code {
    // features
    // add how much memory and cpu servers use
    // change properties on ui


    bool newDownloadStarted = false;
    bool creatingNewServer = false;

    private void LoadServers()
    {
        config.LoadServers();
    }

    private void Kill()
    {
        config.StopAllServers();

        this.StateHasChanged();

        Utilities.RunACommand("taskkill /f /fi \"imagename eq bedrock_server.exe\"", "killall bedrock_server").Start();
    }

    private async void Download()
    {
        newDownloadStarted = true;

        await Task.Run(config.DownloadBedrockServer);

        this.StateHasChanged();
    }

    private async void New()
    {
        creatingNewServer = true;

        await Task.Run(config.NewServer);

        creatingNewServer = false;

        this.StateHasChanged();
    }
}
